<?php

namespace SlavaWins\AuthSms\Models;

use Carbon\Carbon;
use Illuminate\Database\Eloquent\Model;

/**
 * @property mixed $phone
 * @property int $try_count
 * @property int $is_closed
 * @property string $custom_data
 * @property int $id
 * @property string $code
 * @property string $ip
 * @property Carbon $last_try
 * @property Carbon $created_at
 * @property Carbon $updated_at
 * @property int $user_id
 * @property bool $is_sended_on_phone
 */
class PhoneVertify extends Model
{

    protected $casts = [
        'custom_data' => 'array',
    ];

    protected $fillable = [
        'is_sended_on_phone',
        'phone',
        'try_count',
        'code',
        'user_id',
        'ip',
    ];

    protected $dates = [
        'created_at',
        'updated_at',
        'last_try',
    ];

    public function save(array $options = [])
    {

        return parent::save($options); // TODO: Change the autogenerated stub
    }


    public function IsCodeEqals($code1)
    {
        return $this->code === $this->CodeHashCode($code1);

    }

    public function CodeHashCode($code)
    {
        $res = md5($code . '' . $this->ip . '_' . Carbon::now()->format("d.m.Y"));
        $res .= md5($code.''.config('app.key'));
        $res = substr($res, 0, 255);
        return $res;
    }

    public function SetCode($code)
    {
        $this->code = $this->CodeHashCode($code);
    }

    public static function GetRandomCode():string{
        return rand(1000, 9999) . '';
    }

    public static function MakeTryByPhone($phone, $ip, $code)
    {

        $phonevertify = new PhoneVertify();
        $phonevertify->try_count = 0;
        $phonevertify->phone = $phone;
        $phonevertify->ip = $ip;
        $phonevertify->SetCode(  $code);
        $phonevertify->save();


        return $phonevertify;
    }


}
